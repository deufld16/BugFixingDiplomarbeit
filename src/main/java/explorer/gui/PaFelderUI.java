/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package explorer.gui;

import explorer.beans.Field;
import general.bl.GlobalParamter;
import java.awt.Component;
import javax.swing.DefaultListModel;
import javax.swing.JList;

/**
 *
 * @author Florian Deutschmann
 */
public class PaFelderUI extends javax.swing.JPanel {

    private DefaultListModel dlm_available = new DefaultListModel();
    private DefaultListModel dlm_selected = new DefaultListModel();

    /**
     * Creates new form paFelderUI
     */
    public PaFelderUI() {
        initComponents();
        liAvailable.setModel(dlm_available);
        liSelected.setModel(dlm_selected);
    }

    public DefaultListModel getDlm_available() {
        return dlm_available;
    }

    public DefaultListModel getDlm_selected() {
        return dlm_selected;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        liAvailable = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        liSelected = new javax.swing.JList<>();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jMenuItem1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuItem1.setText("Aufsteigend sortieren");
        jMenuItem1.setName(""); // NOI18N
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onAddSortCriteria(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        jMenuItem2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuItem2.setText("Absteigend sortieren");
        jMenuItem2.setName("desc"); // NOI18N
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onAddSortCriteria(evt);
            }
        });
        jPopupMenu1.add(jMenuItem2);

        jMenuItem3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuItem3.setText("kein Sortierkriterium");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onRemSortCriteria(evt);
            }
        });
        jPopupMenu1.add(jMenuItem3);

        setLayout(new java.awt.BorderLayout());

        jPanel1.setPreferredSize(new java.awt.Dimension(300, 150));
        jPanel1.setLayout(new java.awt.BorderLayout());

        liAvailable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        liAvailable.setName("available"); // NOI18N
        liAvailable.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                onSelectItem(evt);
            }
        });
        jScrollPane1.setViewportView(liAvailable);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        add(jPanel1, java.awt.BorderLayout.LINE_START);

        jPanel2.setPreferredSize(new java.awt.Dimension(300, 150));
        jPanel2.setLayout(new java.awt.BorderLayout());

        liSelected.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        liSelected.setComponentPopupMenu(jPopupMenu1);
        liSelected.setName("selected"); // NOI18N
        liSelected.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                liSelectedHierarchyChanged(evt);
            }
        });
        liSelected.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                onSelectItem(evt);
            }
        });
        jScrollPane2.setViewportView(liSelected);

        jPanel2.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        add(jPanel2, java.awt.BorderLayout.LINE_END);

        jPanel3.setPreferredSize(new java.awt.Dimension(150, 150));
        jPanel3.setLayout(new java.awt.GridLayout(2, 1));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("Hinzufügen");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onAddFelder(evt);
            }
        });
        jPanel3.add(jButton1);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setText("Entfernen");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onRemFelder(evt);
            }
        });
        jPanel3.add(jButton2);

        add(jPanel3, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Method that is invoked when the user clicks on "Hinzufügen"
     * @param evt 
     */
    private void onAddFelder(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onAddFelder
        for (Field field : liAvailable.getSelectedValuesList()) {
            if (!dlm_selected.contains(field)) {
                dlm_selected.addElement(field);
            }
        }
    }//GEN-LAST:event_onAddFelder

    /**
     * Method that is invoked when the user clicks on "Entfernen"
     * @param evt 
     */
    private void onRemFelder(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onRemFelder
        for (Field field : liSelected.getSelectedValuesList()) {
            dlm_selected.removeElement(field);
            GlobalParamter.getInstance().getDlg().setTextForTextField(field, 2);
        }
    }//GEN-LAST:event_onRemFelder

    private void onSelectItem(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_onSelectItem
//        System.out.println(((Component)evt.getSource()).getName());
//        if(((Component)evt.getSource()).getName().equalsIgnoreCase("available")){
//            liSelected.clearSelection();
//        }else{
//            liAvailable.clearSelection();
//        }
    }//GEN-LAST:event_onSelectItem

    private void liSelectedHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_liSelectedHierarchyChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_liSelectedHierarchyChanged

    /**
     * Method to add a new sort criteria
     * @param evt 
     */
    private void onAddSortCriteria(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onAddSortCriteria
        if (((Component) evt.getSource()).getName().equalsIgnoreCase("DESC")) {
            for (Field field : liSelected.getSelectedValuesList()) {
                GlobalParamter.getInstance().getDlg().setTextForTextField(field, 1);
            }
        } else {
            for (Field field : liSelected.getSelectedValuesList()) {
                GlobalParamter.getInstance().getDlg().setTextForTextField(field, 0);
            }
        }
    }//GEN-LAST:event_onAddSortCriteria

    /**
     * Method to remove a sort criteria
     * @param evt 
     */
    private void onRemSortCriteria(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onRemSortCriteria
        for (Field field : liSelected.getSelectedValuesList()) {
            GlobalParamter.getInstance().getDlg().setTextForTextField(field, 2);
        }
    }//GEN-LAST:event_onRemSortCriteria

    public JList<Field> getLiSelected() {
        return liSelected;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<Field> liAvailable;
    private javax.swing.JList<Field> liSelected;
    // End of variables declaration//GEN-END:variables
}
