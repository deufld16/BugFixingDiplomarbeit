/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package recorder.gui.dlg;

import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.io.IOException;
import java.util.List;
import javax.swing.ButtonGroup;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JCheckBox;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import recorder.beans.AndereZahlungsmittel;
import recorder.io.IOLoader;

/**
 *
 * @author Anna Lechner & Florian Deutschmann
 */
public class GeschenkkarteDlg extends javax.swing.JDialog {

    private static final Font DEFAULT_FONT = new Font("Tahoma", Font.PLAIN, 18);
    private DefaultComboBoxModel dcbm = new DefaultComboBoxModel();
    private boolean ok;
    private AndereZahlungsmittel selected_element = null;
    private JCheckBox cbDebitor;
    private JTextField tfDebitor;
    private JCheckBox cbNowawi;
    private JRadioButton rbNowawiTrue;
    private JRadioButton rbNowawiFalse;

    /**
     * Creates new form GeschenkskarteDlg
     *
     * @param parent
     * @param modal
     */
    public GeschenkkarteDlg(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setTitle("Andere Zahlungsmittel");
        setSize(new Dimension(800, 650));
        setLocationRelativeTo(null);
        cbGeschenkkarte.setModel(dcbm);
        selected_element = (AndereZahlungsmittel) dcbm.getElementAt(0);
        try {
            testWithoutData();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }

    /**
     * Method to fill the combobox
     */
    private void testWithoutData() throws IOException {
        List<AndereZahlungsmittel> zahlungsmittel = IOLoader.getAndereZahlungsmittel();
        for (AndereZahlungsmittel andereZahlungsmittel : zahlungsmittel) {
            dcbm.addElement(andereZahlungsmittel);
        }
    }

    public boolean isOk() {
        return ok;
    }

    public AndereZahlungsmittel getSelected_element() {
        return selected_element;
    }

    public JCheckBox getCbDebitor() {
        return cbDebitor;
    }

    public JTextField getTfDebitor() {
        return tfDebitor;
    }

    public JCheckBox getCbNowawi() {
        return cbNowawi;
    }

    public JRadioButton getRbNowawiTrue() {
        return rbNowawiTrue;
    }

    public JRadioButton getRbNowawiFalse() {
        return rbNowawiFalse;
    }

    public JCheckBox getCbCardID() {
        return cbCardID;
    }

    public JCheckBox getCbCurrency() {
        return cbCurrency;
    }

    public JCheckBox getCbLimit() {
        return cbLimit;
    }

    public JCheckBox getCbOverpay() {
        return cbOverpay;
    }

    public JCheckBox getCbPayAmound() {
        return cbPayAmount;
    }

    public JCheckBox getCbValid() {
        return cbValid;
    }

    public JRadioButton getRbLimit_true() {
        return rbLimit_true;
    }

    public JRadioButton getRb_limit_false() {
        return rb_limit_false;
    }

    public JRadioButton getRb_overpay_false() {
        return rb_overpay_false;
    }

    public JRadioButton getRb_overpay_true() {
        return rb_overpay_true;
    }

    public JRadioButton getRb_valid_false() {
        return rb_valid_false;
    }

    public JRadioButton getRb_valid_true() {
        return rb_valid_true;
    }

    public JTextField getTfCardID() {
        return tfCardID;
    }

    public JTextField getTfCurrency() {
        return tfCurrency;
    }

    public JTextField getTfPayAmount() {
        return tfPayAmount;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg_limit = new javax.swing.ButtonGroup();
        bg_overpay = new javax.swing.ButtonGroup();
        bg_valid = new javax.swing.ButtonGroup();
        paParent = new javax.swing.JPanel();
        cbGeschenkkarte = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        cbCardID = new javax.swing.JCheckBox();
        tfCardID = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        cbPayAmount = new javax.swing.JCheckBox();
        tfPayAmount = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        cbLimit = new javax.swing.JCheckBox();
        rbLimit_true = new javax.swing.JRadioButton();
        rb_limit_false = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        cbOverpay = new javax.swing.JCheckBox();
        rb_overpay_true = new javax.swing.JRadioButton();
        rb_overpay_false = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        cbValid = new javax.swing.JCheckBox();
        rb_valid_true = new javax.swing.JRadioButton();
        rb_valid_false = new javax.swing.JRadioButton();
        jPanel6 = new javax.swing.JPanel();
        cbCurrency = new javax.swing.JCheckBox();
        tfCurrency = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        btOk = new javax.swing.JButton();
        btCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(1, 1));

        paParent.setLayout(new java.awt.GridLayout(8, 1));

        cbGeschenkkarte.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cbGeschenkkarte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onSelectionChange(evt);
            }
        });
        paParent.add(cbGeschenkkarte);

        jPanel1.setName("abc"); // NOI18N
        jPanel1.setLayout(new java.awt.GridLayout(1, 2));

        cbCardID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cbCardID.setText("Kartennummer");
        cbCardID.setName("card_id"); // NOI18N
        cbCardID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onSelect(evt);
            }
        });
        jPanel1.add(cbCardID);

        tfCardID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tfCardID.setEnabled(false);
        jPanel1.add(tfCardID);

        paParent.add(jPanel1);

        jPanel2.setName("def"); // NOI18N
        jPanel2.setLayout(new java.awt.GridLayout(1, 2));

        cbPayAmount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cbPayAmount.setText("Bezahlungsmenge");
        cbPayAmount.setName("pay_amount"); // NOI18N
        cbPayAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onSelect(evt);
            }
        });
        jPanel2.add(cbPayAmount);

        tfPayAmount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tfPayAmount.setEnabled(false);
        jPanel2.add(tfPayAmount);

        paParent.add(jPanel2);

        jPanel3.setName("ghi"); // NOI18N
        jPanel3.setLayout(new java.awt.GridLayout(1, 3));

        cbLimit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cbLimit.setText("Limit");
        cbLimit.setName("limit"); // NOI18N
        cbLimit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onSelect(evt);
            }
        });
        jPanel3.add(cbLimit);

        bg_limit.add(rbLimit_true);
        rbLimit_true.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rbLimit_true.setText("True");
        rbLimit_true.setEnabled(false);
        jPanel3.add(rbLimit_true);

        bg_limit.add(rb_limit_false);
        rb_limit_false.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rb_limit_false.setSelected(true);
        rb_limit_false.setText("False");
        rb_limit_false.setEnabled(false);
        jPanel3.add(rb_limit_false);

        paParent.add(jPanel3);

        jPanel4.setName("jkl"); // NOI18N
        jPanel4.setLayout(new java.awt.GridLayout(1, 2));

        cbOverpay.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cbOverpay.setText("Überbezahlung");
        cbOverpay.setName("overpay"); // NOI18N
        cbOverpay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onSelect(evt);
            }
        });
        jPanel4.add(cbOverpay);

        bg_overpay.add(rb_overpay_true);
        rb_overpay_true.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rb_overpay_true.setText("True");
        rb_overpay_true.setEnabled(false);
        jPanel4.add(rb_overpay_true);

        bg_overpay.add(rb_overpay_false);
        rb_overpay_false.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rb_overpay_false.setSelected(true);
        rb_overpay_false.setText("False");
        rb_overpay_false.setEnabled(false);
        jPanel4.add(rb_overpay_false);

        paParent.add(jPanel4);

        jPanel5.setName("mno"); // NOI18N
        jPanel5.setLayout(new java.awt.GridLayout(1, 2));

        cbValid.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cbValid.setText("Gültig");
        cbValid.setName("valid"); // NOI18N
        cbValid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onSelect(evt);
            }
        });
        jPanel5.add(cbValid);

        bg_valid.add(rb_valid_true);
        rb_valid_true.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rb_valid_true.setText("True");
        rb_valid_true.setEnabled(false);
        jPanel5.add(rb_valid_true);

        bg_valid.add(rb_valid_false);
        rb_valid_false.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rb_valid_false.setSelected(true);
        rb_valid_false.setText("False");
        rb_valid_false.setEnabled(false);
        jPanel5.add(rb_valid_false);

        paParent.add(jPanel5);

        jPanel6.setName("prs"); // NOI18N
        jPanel6.setLayout(new java.awt.GridLayout(1, 2));

        cbCurrency.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cbCurrency.setText("Währung");
        cbCurrency.setName("currency"); // NOI18N
        cbCurrency.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onSelect(evt);
            }
        });
        jPanel6.add(cbCurrency);

        tfCurrency.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tfCurrency.setEnabled(false);
        jPanel6.add(tfCurrency);

        paParent.add(jPanel6);

        jPanel7.setName("tuv"); // NOI18N
        jPanel7.setLayout(new java.awt.GridLayout(1, 2));

        btOk.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btOk.setLabel("OK");
        btOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onOk(evt);
            }
        });
        jPanel7.add(btOk);

        btCancel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btCancel.setText("Abbrechen");
        btCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onCancel(evt);
            }
        });
        jPanel7.add(btCancel);

        paParent.add(jPanel7);

        getContentPane().add(paParent);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Method that is called when the user selects a checkbox
     *
     * @param evt
     */
    private void onSelect(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onSelect
        JCheckBox cb = (JCheckBox) evt.getSource();
        switch (cb.getName()) {
            case "card_id":
                tfCardID.setEnabled(cb.isSelected());
                break;
            case "pay_amount":
                tfPayAmount.setEnabled(cb.isSelected());
                break;
            case "valid":
                rb_valid_false.setEnabled(cb.isSelected());
                rb_valid_true.setEnabled(cb.isSelected());
                break;
            case "limit":
                rbLimit_true.setEnabled(cb.isSelected());
                rb_limit_false.setEnabled(cb.isSelected());
                break;
            case "overpay":
                rb_overpay_true.setEnabled(cb.isSelected());
                rb_overpay_false.setEnabled(cb.isSelected());
                break;
            case "currency":
                tfCurrency.setEnabled(cb.isSelected());
                break;
        }
    }//GEN-LAST:event_onSelect

    /**
     * Method that is called when the user presses "Cancel"
     *
     * @param evt
     */
    private void onCancel(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onCancel
        this.ok = false;
        this.dispose();
    }//GEN-LAST:event_onCancel

    /**
     * Method that is called when the user presses OK
     *
     * @param evt
     */
    private void onOk(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onOk
        this.ok = true;
        this.dispose();
    }//GEN-LAST:event_onOk

    /**
     * Method that is called when "Verkauf auf Rechnung" is chosen
     *
     * @param evt
     */
    private void onSelectionChange(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onSelectionChange
        selected_element = (AndereZahlungsmittel) cbGeschenkkarte.getSelectedItem();
        if (selected_element.getDisplay_name().contains("Verk.a.Rec")) {
            //reset old GUI
            paParent.removeAll();
            paParent.add(cbGeschenkkarte);
            paParent.updateUI();
            //create new GUI
            JPanel paNew0 = new JPanel();
            paNew0.setLayout(new GridLayout(1, 2));
            paNew0.add(cbPayAmount);
            paNew0.add(tfPayAmount);

            //Panel1
            JPanel paNew1 = createDebitorPanel();

            //Panel2
            JPanel paNew2 = createNowawiPanel();

            ((GridLayout) paParent.getLayout()).setRows(5);
            ((GridLayout) paParent.getLayout()).setColumns(1);

            //Panel3 - Button Panel
            JPanel paNew3 = new JPanel();
            paNew3.setLayout(new GridLayout(1, 2));
            paNew3.add(btOk);
            paNew3.add(btCancel);

            //add all panels to the parent panel
            paParent.add(paNew0);
            paParent.add(paNew1);
            paParent.add(paNew2);
            paParent.add(paNew3);
            paParent.updateUI();
        } else if (((GridLayout) paParent.getLayout()).getRows() != 8) {
            try {
                //when it changes back to another mean of payment
                paParent.removeAll();
                paParent.updateUI();
                remove(paParent);
                initComponents();
                setTitle("Andere Zahlungsmittel");
                setSize(new Dimension(800, 650));
                setLocationRelativeTo(null);
                dcbm = new DefaultComboBoxModel();
                cbGeschenkkarte.setModel(dcbm);
                testWithoutData();
                dcbm.setSelectedItem(selected_element);
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_onSelectionChange

    /**
     * Method that creates the panel "Debitor" for "Verkauf auf Rechnung"
     *
     * @return
     */
    private JPanel createDebitorPanel() {
        JPanel paNew1 = new JPanel();
        paNew1.setLayout(new GridLayout(1, 2));
        cbDebitor = new JCheckBox("Debitor");
        cbDebitor.setFont(DEFAULT_FONT);
        cbDebitor.setName("debitor");
        tfDebitor = new JTextField();
        tfDebitor.setEnabled(false);
        tfDebitor.setFont(DEFAULT_FONT);

        cbDebitor.addActionListener((ActionEvent e) -> {
            JCheckBox cb = (JCheckBox) e.getSource();
            switch (cb.getName()) {
                case "debitor":
                    tfDebitor.setEnabled(cb.isSelected());
                    break;
            }
        });
        paNew1.add(cbDebitor);
        paNew1.add(tfDebitor);
        return paNew1;
    }

    /**
     * Method to create the panel "Nowawi" for "Verkauf auf Rechnung"
     *
     * @return
     */
    private JPanel createNowawiPanel() {
        JPanel paNew2 = new JPanel();
        paNew2.setLayout(new GridLayout(1, 3));
        cbNowawi = new JCheckBox("Nowawi");
        cbNowawi.setName("nowawi");
        cbNowawi.setFont(DEFAULT_FONT);
        ButtonGroup bg = new ButtonGroup();
        rbNowawiTrue = new JRadioButton("True");
        rbNowawiTrue.setFont(DEFAULT_FONT);
        rbNowawiTrue.setEnabled(false);
        rbNowawiFalse = new JRadioButton("False");
        rbNowawiFalse.setSelected(true);
        rbNowawiFalse.setFont(DEFAULT_FONT);
        rbNowawiFalse.setEnabled(false);
        bg.add(rbNowawiTrue);
        bg.add(rbNowawiFalse);
        cbNowawi.addActionListener((ActionEvent e) -> {
            JCheckBox cb = (JCheckBox) e.getSource();
            switch (cb.getName()) {
                case "nowawi":
                    rbNowawiTrue.setEnabled(cb.isSelected());
                    rbNowawiFalse.setEnabled(cb.isSelected());
                    break;
            }
        });
        paNew2.add(cbNowawi);
        paNew2.add(rbNowawiTrue);
        paNew2.add(rbNowawiFalse);
        return paNew2;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GeschenkkarteDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GeschenkkarteDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GeschenkkarteDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GeschenkkarteDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GeschenkkarteDlg dialog = new GeschenkkarteDlg(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bg_limit;
    private javax.swing.ButtonGroup bg_overpay;
    private javax.swing.ButtonGroup bg_valid;
    private javax.swing.JButton btCancel;
    private javax.swing.JButton btOk;
    private javax.swing.JCheckBox cbCardID;
    private javax.swing.JCheckBox cbCurrency;
    private javax.swing.JComboBox<recorder.beans.AndereZahlungsmittel> cbGeschenkkarte;
    private javax.swing.JCheckBox cbLimit;
    private javax.swing.JCheckBox cbOverpay;
    private javax.swing.JCheckBox cbPayAmount;
    private javax.swing.JCheckBox cbValid;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel paParent;
    private javax.swing.JRadioButton rbLimit_true;
    private javax.swing.JRadioButton rb_limit_false;
    private javax.swing.JRadioButton rb_overpay_false;
    private javax.swing.JRadioButton rb_overpay_true;
    private javax.swing.JRadioButton rb_valid_false;
    private javax.swing.JRadioButton rb_valid_true;
    private javax.swing.JTextField tfCardID;
    private javax.swing.JTextField tfCurrency;
    private javax.swing.JTextField tfPayAmount;
    // End of variables declaration//GEN-END:variables
}
