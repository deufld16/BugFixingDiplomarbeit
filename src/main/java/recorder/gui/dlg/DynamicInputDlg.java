/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package recorder.gui.dlg;

import java.awt.Font;
import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.nio.file.Paths;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import recorder.beans.ListItem;

/**
 *
 * @author Maxi
 */
public class DynamicInputDlg extends javax.swing.JDialog {

    private String inputType;
    private Object modifiedInput = null;
    private boolean done = false;
    private String attributeTagStr;
    private JComboBox<ListItem> cbMultiple;
    private DefaultComboBoxModel dcbm;
    private String displayName;

    /**
     * Default Constructor
     *
     * @param frame
     * @param bln
     */
    public DynamicInputDlg(Frame frame, boolean bln) {
        super(frame, bln);
    }

    /**
     * Constructor of DynamicInputDlg
     *
     * @param parent
     * @param modal
     * @param inputType
     * @param attributeTagStr
     * @param displayName
     */
    public DynamicInputDlg(java.awt.Frame parent, boolean modal, String inputType, String attributeTagStr, String displayName) {
        super(parent, modal);
        this.inputType = inputType;
        this.attributeTagStr = attributeTagStr;
        this.displayName = displayName;
        initComponents();
        this.setIconImage(new ImageIcon(Paths.get(System.getProperty("user.dir"), "src", "res", "img", "logo.png").toString()).getImage());
        this.setLocationRelativeTo(null);
        lbInput.setText(this.attributeTagStr + ":");
        if (inputType.equals("LIST")) {
            paCenter.remove(tfInput);
            cbMultiple = new JComboBox<>();
            dcbm = new DefaultComboBoxModel();
        }

        lbInput.setText(displayName);
    }

    /**
     * Constructor of DynamicInputDlg for the Combobox
     *
     * @param parent
     * @param modal
     * @param values
     * @param attributeTagStr
     * @param displayName
     */
    public DynamicInputDlg(java.awt.Frame parent, boolean modal, String attributeTagStr, List<ListItem> values, String displayName) {
        super(parent, modal);
        this.inputType = inputType;
        this.attributeTagStr = attributeTagStr;

        this.displayName = displayName;
        initComponents();
        this.setIconImage(new ImageIcon(Paths.get(System.getProperty("user.dir"), "src", "res", "img", "logo.png").toString()).getImage());
        this.setLocationRelativeTo(null);
        lbInput.setText(this.attributeTagStr + ":");
        this.inputType = "LIST";
        paCenter.remove(tfInput);
        cbMultiple = new JComboBox<ListItem>();
        dcbm = new DefaultComboBoxModel(values.toArray());
        cbMultiple.setModel(dcbm);
        cbMultiple.setFont(new Font("Tahoma", Font.PLAIN, 24));
        paCenter.add(cbMultiple);
        lbInput.setText(displayName);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        paCenter = new javax.swing.JPanel();
        lbInput = new javax.swing.JLabel();
        tfInput = new javax.swing.JTextField();
        paSouth = new javax.swing.JPanel();
        btOk = new javax.swing.JButton();
        btCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(600, 150));

        paCenter.setBackground(new java.awt.Color(255, 255, 255));
        paCenter.setPreferredSize(new java.awt.Dimension(600, 250));
        paCenter.setLayout(new java.awt.GridLayout(1, 2));

        lbInput.setBackground(new java.awt.Color(204, 204, 204));
        lbInput.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lbInput.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbInput.setText("Eingabe:");
        lbInput.setOpaque(true);
        paCenter.add(lbInput);

        tfInput.setBackground(new java.awt.Color(204, 204, 204));
        tfInput.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tfInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfInput.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        tfInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                onEnter(evt);
            }
        });
        paCenter.add(tfInput);

        getContentPane().add(paCenter, java.awt.BorderLayout.CENTER);

        paSouth.setBackground(new java.awt.Color(204, 204, 204));
        paSouth.setPreferredSize(new java.awt.Dimension(600, 37));
        paSouth.setLayout(new java.awt.GridLayout(1, 2));

        btOk.setBackground(new java.awt.Color(255, 255, 255));
        btOk.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btOk.setText("OK");
        btOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onOk(evt);
            }
        });
        paSouth.add(btOk);

        btCancel.setBackground(new java.awt.Color(255, 255, 255));
        btCancel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btCancel.setText("Abbrechen");
        btCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onCancel(evt);
            }
        });
        paSouth.add(btCancel);

        getContentPane().add(paSouth, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Method that is called when the user presses OK
     *
     * @param evt
     */
    private void onOk(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onOk
        doOkAction();
    }//GEN-LAST:event_onOk

    /**
     * Outsourced method that saves all input and disposes the dialog
     */
    private void doOkAction() {
        if (cbMultiple == null) {
            String input = tfInput.getText();
            if (input == null || input.trim().equals("")) {
                return;
            }
            if (inputType == null) {
                JOptionPane.showMessageDialog(null, "Kein Eingabe-Datentyp definiert!");
                return;
            }
            switch (inputType) {
                case "STRINGUPPER":
                    modifiedInput = input.toUpperCase();
                    break;
                case "STRINGLOWER":
                    modifiedInput = input.toLowerCase();
                    break;
                case "INT":
                try {
                    modifiedInput = Integer.parseInt(input);
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(null, "Bitte eine valide Ganzzahl eingeben!");
                    return;
                }
                break;
                case "DOUBLE":
                try {
                    modifiedInput = Double.parseDouble(input);
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(null, "Bitte eine valide Gleitkommazahl eingeben!");
                    return;
                }
                break;
                default:
                    modifiedInput = input;
            }
        }
        done = true;
        dispose();
    }

    /**
     * Method that is called when the user presses "Cancel"
     *
     * @param evt
     */
    private void onCancel(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onCancel
        done = false;
        dispose();
    }//GEN-LAST:event_onCancel
/**
     * Method that is called when the user presses "Enter" while being in the text field
     *
     * @param evt
     */
    private void onEnter(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_onEnter
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            doOkAction();
        }
    }//GEN-LAST:event_onEnter

    public ListItem getSelectedItem() {
        return (ListItem) cbMultiple.getSelectedItem();
    }

    public Object getModifiedInput() {
        return modifiedInput;
    }

    public void setModifiedInput(Object modifiedInput) {
        this.modifiedInput = modifiedInput;
    }

    public boolean isDone() {
        return done;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DynamicInputDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DynamicInputDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DynamicInputDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DynamicInputDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DynamicInputDlg dialog = new DynamicInputDlg(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancel;
    private javax.swing.JButton btOk;
    private javax.swing.JLabel lbInput;
    private javax.swing.JPanel paCenter;
    private javax.swing.JPanel paSouth;
    private javax.swing.JTextField tfInput;
    // End of variables declaration//GEN-END:variables
}
